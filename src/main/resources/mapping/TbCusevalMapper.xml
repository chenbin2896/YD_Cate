<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.axbt.to.dao.TbCusevalMapper">
  <resultMap id="BaseResultMap" type="top.axbt.to.domain.TbCuseval">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="cus_id" jdbcType="BIGINT" property="cusId" />
    <result column="sell_product_id" jdbcType="BIGINT" property="sellProductId" />
    <result column="shop_id" jdbcType="BIGINT" property="shopId" />
    <result column="courier_level" jdbcType="INTEGER" property="courierLevel" />
    <result column="product_level" jdbcType="INTEGER" property="productLevel" />
    <result column="eval_comment" jdbcType="VARCHAR" property="evalComment" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cus_id, sell_product_id, shop_id, courier_level, product_level, eval_comment, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="top.axbt.to.domain.TbCusevalExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from cuseval
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cuseval
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cuseval
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="top.axbt.to.domain.TbCusevalExample">
    delete from cuseval
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="top.axbt.to.domain.TbCuseval">
    insert into cuseval (id, cus_id, sell_product_id, 
      shop_id, courier_level, product_level, 
      eval_comment, create_time, update_time
      )
    values (#{id,jdbcType=BIGINT}, #{cusId,jdbcType=BIGINT}, #{sellProductId,jdbcType=BIGINT}, 
      #{shopId,jdbcType=BIGINT}, #{courierLevel,jdbcType=INTEGER}, #{productLevel,jdbcType=INTEGER}, 
      #{evalComment,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="top.axbt.to.domain.TbCuseval">
    insert into cuseval
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cusId != null">
        cus_id,
      </if>
      <if test="sellProductId != null">
        sell_product_id,
      </if>
      <if test="shopId != null">
        shop_id,
      </if>
      <if test="courierLevel != null">
        courier_level,
      </if>
      <if test="productLevel != null">
        product_level,
      </if>
      <if test="evalComment != null">
        eval_comment,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="cusId != null">
        #{cusId,jdbcType=BIGINT},
      </if>
      <if test="sellProductId != null">
        #{sellProductId,jdbcType=BIGINT},
      </if>
      <if test="shopId != null">
        #{shopId,jdbcType=BIGINT},
      </if>
      <if test="courierLevel != null">
        #{courierLevel,jdbcType=INTEGER},
      </if>
      <if test="productLevel != null">
        #{productLevel,jdbcType=INTEGER},
      </if>
      <if test="evalComment != null">
        #{evalComment,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="top.axbt.to.domain.TbCusevalExample" resultType="java.lang.Long">
    select count(*) from cuseval
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cuseval
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.cusId != null">
        cus_id = #{record.cusId,jdbcType=BIGINT},
      </if>
      <if test="record.sellProductId != null">
        sell_product_id = #{record.sellProductId,jdbcType=BIGINT},
      </if>
      <if test="record.shopId != null">
        shop_id = #{record.shopId,jdbcType=BIGINT},
      </if>
      <if test="record.courierLevel != null">
        courier_level = #{record.courierLevel,jdbcType=INTEGER},
      </if>
      <if test="record.productLevel != null">
        product_level = #{record.productLevel,jdbcType=INTEGER},
      </if>
      <if test="record.evalComment != null">
        eval_comment = #{record.evalComment,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cuseval
    set id = #{record.id,jdbcType=BIGINT},
      cus_id = #{record.cusId,jdbcType=BIGINT},
      sell_product_id = #{record.sellProductId,jdbcType=BIGINT},
      shop_id = #{record.shopId,jdbcType=BIGINT},
      courier_level = #{record.courierLevel,jdbcType=INTEGER},
      product_level = #{record.productLevel,jdbcType=INTEGER},
      eval_comment = #{record.evalComment,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="top.axbt.to.domain.TbCuseval">
    update cuseval
    <set>
      <if test="cusId != null">
        cus_id = #{cusId,jdbcType=BIGINT},
      </if>
      <if test="sellProductId != null">
        sell_product_id = #{sellProductId,jdbcType=BIGINT},
      </if>
      <if test="shopId != null">
        shop_id = #{shopId,jdbcType=BIGINT},
      </if>
      <if test="courierLevel != null">
        courier_level = #{courierLevel,jdbcType=INTEGER},
      </if>
      <if test="productLevel != null">
        product_level = #{productLevel,jdbcType=INTEGER},
      </if>
      <if test="evalComment != null">
        eval_comment = #{evalComment,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.axbt.to.domain.TbCuseval">
    update cuseval
    set cus_id = #{cusId,jdbcType=BIGINT},
      sell_product_id = #{sellProductId,jdbcType=BIGINT},
      shop_id = #{shopId,jdbcType=BIGINT},
      courier_level = #{courierLevel,jdbcType=INTEGER},
      product_level = #{productLevel,jdbcType=INTEGER},
      eval_comment = #{evalComment,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>